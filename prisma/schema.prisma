// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id               Int         @id @default(autoincrement())
  name             String
  studentNumber    Int         @unique
  attendanceNumber Int
  className        String
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  Desk             Desk[]
  CallOrder        CallOrder[]
}

model Classroom {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  breadth   Int
  gaps      Int[]
  split     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  placement Placement[]
  Desk      Desk[]
  CallOrder CallOrder[]
}

model Desk {
  id          Int       @id @default(autoincrement())
  seatNumber  Int
  classroomId Int
  studentId   Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  student     Student?  @relation(fields: [studentId], references: [id])
}

model Placement {
  id             Int        @id @default(autoincrement())
  name           String
  positionNumber Int
  classroomId    Int?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  Classroom      Classroom? @relation(fields: [classroomId], references: [id])
}

model CallOrder {
  id          Int       @id @default(autoincrement())
  seatNumber  Int
  status      Boolean   @default(false)
  check       Boolean   @default(false)
  today       Boolean   @default(false)
  classroomId Int
  studentId   Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  student     Student   @relation(fields: [studentId], references: [id])
}
