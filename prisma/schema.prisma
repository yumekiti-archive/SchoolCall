// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id                Int         @id @default(autoincrement())
  name              String
  attendance_number Int
  classId           Int?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  Desk              Desk[]
  CallOrder         CallOrder[]
  Class             Class?      @relation(fields: [classId], references: [id])
}

model Classroom {
  id        Int         @id @default(autoincrement())
  name      String
  breadth   Int
  gaps      Int[]
  placement Placement[]
  class     Class[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Desk      Desk[]
  CallOrder CallOrder[]
}

model Desk {
  id          Int       @id @default(autoincrement())
  seatNumber  Int
  classroomId Int
  studentId   Int?
  classId     Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  student     Student?  @relation(fields: [studentId], references: [id])
  class       Class?    @relation(fields: [classId], references: [id])
}

model Placement {
  id           Int        @id @default(autoincrement())
  potionNumber Int
  name         String
  classroomId  Int?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Classroom    Classroom? @relation(fields: [classroomId], references: [id])
}

model CallOrder {
  id          Int       @id @default(autoincrement())
  seatNumber  Int
  status      Boolean
  classroomId Int
  studentId   Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  student     Student   @relation(fields: [studentId], references: [id])
}

model Class {
  id          Int        @id @default(autoincrement())
  name        String
  classroomId Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Student     Student[]
  Desk        Desk[]
  Classroom   Classroom? @relation(fields: [classroomId], references: [id])
}
